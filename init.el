;;; Code:
;;; ロードパス
;; load-pathの追加関数
(defun add-to-load-path (&rest paths)
  (let (path)
    (dolist (path paths paths)
      (let ((default-directory (expand-file-name (concat user-emacs-directory path))))
        (add-to-list 'load-path default-directory)
        (if (fboundp 'normal-top-level-add-subdirs-to-load-path)
            (normal-top-level-add-subdirs-to-load-path))))))
;; load-pathに追加するディレクトリ
(add-to-load-path "loads/elisp/" "loads/site-lisp/")

(require 'package)
(setq package-user-dir "~/.emacs.d/loads/elisp/")
(setq package-archives
      '(
        ("gnu"          . "https://elpa.gnu.org/packages/")
        ("melpa"        . "https://melpa.org/packages/")
        ("melpa-stable" . "https://stable.melpa.org/packages/")
        ("marmalade"    . "http://marmalade-repo.org/packages/")
        ("org"          . "http://orgmode.org/elpa/")
        ))
(setq package-pinned-packages
      '(
        (init-loader               . "melpa-stable")
        (use-package               . "melpa-stable")
        (bind-key                  . "melpa-stable")
        (avy                       . "melpa-stable")
        (xclip                     . "melpa-stable")
        (irony                     . "melpa-stable")
        (doom-themes               . "melpa-stable")
        (golden-ratio              . "melpa-stable")
        (srefactor                 . "melpa-stable")
        (company                   . "melpa-stable")
        (company-irony-c-headers   . "melpa-stable")
        (company-c-headers         . "melpa-stable")
        (company-irony             . "melpa-stable")
        (company-fuzzy             . "melpa-stable")
        (smart-newline             . "melpa")
        (anzu                      . "melpa-stable")
        (popup                     . "melpa-stable")
        (swiper-helm               . "melpa-stable")
        (dumb-jump                 . "melpa-stable")
        (avy-migemo                . "melpa-stable")
        (ivy                       . "melpa-stable")
        (ivy-yasnippet             . "melpa-stable")
        (eshell                    . "melpa-stable")
        (elscreen                  . "melpa-stable")
        (auto-complete             . "melpa-stable")
        (auto-complete-c-headers   . "melpa")
        (auto-complete-clang-async . "melpa-stable")
        (mozc                      . "melpa")
        (google-translate          . "melpa-stable")
        (swiper                    . "melpa-stable")
        (exec-path-from-shell      . "melpa-stable")
        (tabbar                    . "melpa-stable")
        (which-key                 . "melpa-stable")
        (neotree                   . "melpa-stable")
        (imenu-list                . "melpa-stable")
        (ispell                    . "melpa-stable")
        (powerline                 . "melpa-stable")
        (easy-kill                 . "melpa-stable")
        (dash                      . "melpa-stable")
        (async                     . "melpa-stable")
        (eieio                     . "melpa-stable")
        (fuzzy                     . "melpa-stable")
        (move-text                 . "melpa-stable")
        (migemo                    . "melpa-stable")
        (multiple-cursors          . "melpa-stable")
        (google-c-style            . "melpa")
        (smartrep                  . "melpa-stable")
        (expand-region             . "melpa-stable")
        (flycheck                  . "melpa-stable")
        (flycheck-pos-tip          . "melpa-stable")
        (exec-path-from-shell      . "melpa-stable")
        (highlight-symbol          . "melpa-stable")
        (auto-highlight-symbol     . "marmalade")
        (recentf                   . "melpa")
        (recentf-ext               . "melpa")
        (smooth-scroll             . "melpa-stable")
        (rainbow-delimiters        . "melpa-stable")
        (region-bindings-mode      . "melpa")
        (color-theme-modern        . "melpa-stable")
        (google-translate          . "melpa-stable")
        (codic                     . "melpa-stable")
        (e2wm                      . "melpa-stable")
        (go-mode                   . "melpa-stable")
        (enh-ruby-mode             . "melpa-stable")
        (ruby-electric             . "melpa-stable")
        (ruby-block                . "marmalade")
        (nlinum                    . "melpa-stable")
        (go-autocomplete           . "melpa-stable")
        (go-eldoc                  . "melpa-stable")
        (undo-tree                 . "gnu")
        (undohist                  . "melpa-stable")
        (helm                      . "melpa-stable")
        (window-layout             . "melpa-stable")
        (helm-core                 . "melpa-stable")
        (helm-gtags                . "melpa-stable")
        (helm-descbinds            . "melpa-stable")
        (helm-ag                   . "melpa-stable")
        (helm-c-yasnippet          . "melpa-stable")
        (yasnippet                 . "melpa-stable")
        (yasnippet-snippets        . "melpa-stable")
        ))
(package-initialize)

;;;;; use-package の存在を保証
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

;;;;; init-loader
(use-package init-loader
  :ensure t
  :config
  (init-loader-load "~/.emacs.d/loads/inits/")
  (setq init-loader-show-log-after-init nil)
)

(provide 'init)
;; ;;; init.el ends here
